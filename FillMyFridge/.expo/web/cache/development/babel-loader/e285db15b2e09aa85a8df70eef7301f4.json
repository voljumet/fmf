{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/olegunvaldsen/fmf/FillMyFridge/screens/SearchScreen.js\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport * as Animatable from 'react-native-animatable';\n\nvar SearchScreen = function (_React$Component) {\n  _inherits(SearchScreen, _React$Component);\n\n  function SearchScreen() {\n    var _this;\n\n    _classCallCheck(this, SearchScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchScreen).call(this));\n\n    _this.keyboardDidShow = function () {\n      _this.setState({\n        searchBarFocused: true\n      });\n    };\n\n    _this.keyboardDidHide = function () {\n      _this.setState({\n        searchBarFocused: false\n      });\n    };\n\n    _this.serachitem = function (value) {\n      var filteredItems = _this.state.inMemmory.filter(function (item) {\n        var itemLowerCase = item.title.toLowerCase();\n        var searchItemLowerCase = value.toLowerCase();\n        return itemLowerCase.indexOf(searchItemLowerCase) > -1;\n      });\n\n      _this.setState({\n        dataSource: filteredItems\n      });\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          minHeight: 70,\n          padding: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      }, item.title));\n    };\n\n    _this.state = {\n      isLoading: true,\n      dataSource: [],\n      searchBarFocused: false\n    };\n    return _this;\n  }\n\n  _createClass(SearchScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.keyboardDidShow = Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n      this.keyboardWillShow = Keyboard.addListener('keyboardWillShow', this.keyboardWillShow);\n      this.keyboardDidHide = Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n      return fetch('http://facebook.github.io/react-native/movies.json').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this2.setState({\n          isLoading: false,\n          dataSource: responseJson.movies,\n          inMemmory: responseJson.movies\n        });\n      }).catch(function (error) {\n        alert(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          }\n        }, React.createElement(ActivityIndicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      }, React.createElement(View, {\n        style: {\n          padding: 50,\n          backgroundColor: '#c45654',\n          justifyContent: 'center',\n          paddingHorizontal: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        }\n      }, React.createElement(Animatable.View, {\n        animation: \"slideInRight\",\n        duration: 500,\n        style: {\n          height: 50,\n          backgroundColor: 'white',\n          flexDirection: 'row',\n          padding: 5,\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }, React.createElement(Icon, {\n        name: this.state.searchBarFocused ? 'md-arrow-back' : 'ios-search',\n        style: {\n          fontSize: 24\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Search for groceries\",\n        style: {\n          fontSize: 24,\n          marginLeft: 15,\n          flex: 1\n        },\n        onChangeText: function onChangeText(value) {\n          return _this3.serachitem(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        }\n      }, React.createElement(FlatList, {\n        style: {\n          backgroundColor: this.state.searchBarFocused ? 'rgba(0,0,0,0.3)' : 'white',\n          margin: 20\n        },\n        data: this.state.dataSource,\n        renderItem: this.renderItem,\n        ListEmptyComponent: function ListEmptyComponent() {\n          return React.createElement(Text, {\n            style: {\n              color: \"red\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            }\n          }, \"No Iten Found \");\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        }\n      }))));\n    }\n  }]);\n\n  return SearchScreen;\n}(React.Component);\n\nexport { SearchScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  item: {\n    flex: 1,\n    alignSelf: 'stretch',\n    margin: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee'\n  }\n});","map":{"version":3,"sources":["/Users/olegunvaldsen/fmf/FillMyFridge/screens/SearchScreen.js"],"names":["React","Icon","Animatable","SearchScreen","keyboardDidShow","setState","searchBarFocused","keyboardDidHide","serachitem","value","filteredItems","state","inMemmory","filter","item","itemLowerCase","title","toLowerCase","searchItemLowerCase","indexOf","dataSource","renderItem","minHeight","padding","isLoading","Keyboard","addListener","keyboardWillShow","fetch","then","response","json","responseJson","movies","catch","error","alert","styles","container","flex","backgroundColor","justifyContent","paddingHorizontal","height","flexDirection","alignItems","fontSize","marginLeft","margin","color","index","toString","Component","StyleSheet","create","alignSelf","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  FlatList,\n  ActivityIndicator,\n  Keyboard\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport * as Animatable from 'react-native-animatable';\nexport default class SearchScreen extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      dataSource: [],\n      searchBarFocused: false\n    };\n  }\n\n  componentDidMount() {\n    this.keyboardDidShow = Keyboard.addListener('keyboardDidShow', this.keyboardDidShow)\n    this.keyboardWillShow = Keyboard.addListener('keyboardWillShow', this.keyboardWillShow)\n    this.keyboardDidHide = Keyboard.addListener('keyboardDidHide', this.keyboardDidHide)\n    // Change the URL to Store's URL\n    return fetch('http://facebook.github.io/react-native/movies.json')\n      .then((response) => response.json())\n      .then((responseJson) => {\n\n        this.setState({\n          isLoading: false,\n          dataSource: responseJson.movies,\n          inMemmory: responseJson.movies,\n        })\n\n      })\n      .catch((error) => {\n        alert(error)\n      });\n\n  }\n  keyboardDidShow = () => {\n    this.setState({ searchBarFocused: true })\n\n  }\n  keyboardDidHide = () => {\n    this.setState({ searchBarFocused: false })\n\n  }\n\n  serachitem = value => {\n    //Change \"title\" with the corresponding name in API\n    const filteredItems = this.state.inMemmory.filter(item => {\n      let itemLowerCase = (\n        item.title).toLowerCase();\n      let searchItemLowerCase = value.toLowerCase();\n\n      return itemLowerCase.indexOf(searchItemLowerCase) > -1\n    });\n    this.setState({ dataSource: filteredItems });\n  };\n\n  renderItem = ({ item }) =>\n    (\n\n        //Change \"title\" with the corresponding name in API\n      <View style={{ minHeight: 70, padding: 5 }}>\n        <Text>\n          {item.title}\n        </Text>\n      </View>\n    )\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <View style={styles.container}>\n          <ActivityIndicator />\n        </View>\n      )\n    }\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            padding: 50,\n            backgroundColor: '#c45654',\n            justifyContent: 'center',\n            paddingHorizontal: 5\n          }}>\n          < Animatable.View animation=\"slideInRight\" duration={500} style={{\n            height: 50,\n            backgroundColor: 'white',\n            flexDirection: 'row',\n            padding: 5,\n            alignItems: 'center'\n          }}>\n\n            <Icon\n              name={this.state.searchBarFocused ? 'md-arrow-back' : 'ios-search'}\n              style={{ fontSize: 24 }}\n            //onPress = {(value) => serachitem(value)}\n            />\n            <TextInput placeholder=\"Search for groceries\"\n              style={{\n                fontSize: 24,\n                marginLeft: 15,\n                flex: 1\n\n              }}\n\n              onChangeText={value => this.serachitem(value)}\n\n            />\n\n          </ Animatable.View>\n\n\n\n\n          <View>\n            <FlatList\n              style={{ backgroundColor: this.state.searchBarFocused ? 'rgba(0,0,0,0.3)' : 'white', margin: 20 }}\n              data={this.state.dataSource}\n              renderItem={this.renderItem}\n              //{({ item }) => <Text style={{ padding: 20, fontSize: 20 }}>{item.title} </Text>}\n              ListEmptyComponent={() => (\n                <Text style={{ color: \"red\" }}>No Iten Found </Text>\n              )}\n              keyExtractor={(item, index) => index.toString()}\n\n            />\n\n          </View>\n        </View>\n      </View>\n    );\n\n  }\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  item: {\n    flex: 1,\n    alignSelf: 'stretch',\n    margin: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n    \n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}
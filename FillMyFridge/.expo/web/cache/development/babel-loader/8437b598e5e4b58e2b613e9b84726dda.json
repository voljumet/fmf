{"ast":null,"code":"var _jsxFileName = \"/Users/alex/FMF/FillMyFridge/screens/LinksScreen.js\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\nexport default function LinksScreen() {\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    contentContainerStyle: styles.contentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    }\n  }, React.createElement(OptionButton, {\n    icon: \"md-school\",\n    label: \"Read the Expo documentation\",\n    onPress: function onPress() {\n      return WebBrowser.openBrowserAsync('https://docs.expo.io');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    }\n  }), React.createElement(OptionButton, {\n    icon: \"md-compass\",\n    label: \"Read the React Navigation documentation\",\n    onPress: function onPress() {\n      return WebBrowser.openBrowserAsync('https://reactnavigation.org');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    }\n  }), React.createElement(OptionButton, {\n    icon: \"ios-chatboxes\",\n    label: \"Ask a question on the forums\",\n    onPress: function onPress() {\n      return WebBrowser.openBrowserAsync('https://forums.expo.io');\n    },\n    isLastOption: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    }\n  }));\n}\n\nfunction OptionButton(_ref) {\n  var icon = _ref.icon,\n      label = _ref.label,\n      onPress = _ref.onPress,\n      isLastOption = _ref.isLastOption;\n  return React.createElement(RectButton, {\n    style: [styles.option, isLastOption && styles.lastOption],\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    }\n  }, React.createElement(View, {\n    style: styles.optionIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    }\n  }, React.createElement(Ionicons, {\n    name: icon,\n    size: 22,\n    color: \"rgba(0,0,0,0.35)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    }\n  })), React.createElement(View, {\n    style: styles.optionTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    }\n  }, React.createElement(Text, {\n    style: styles.optionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    }\n  }, label))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa'\n  },\n  contentContainer: {\n    paddingTop: 15\n  },\n  optionIconContainer: {\n    marginRight: 12\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#ededed'\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1\n  }\n});","map":{"version":3,"sources":["/Users/alex/FMF/FillMyFridge/screens/LinksScreen.js"],"names":["React","Ionicons","WebBrowser","RectButton","ScrollView","LinksScreen","styles","container","contentContainer","openBrowserAsync","OptionButton","icon","label","onPress","isLastOption","option","lastOption","flexDirection","optionIconContainer","optionTextContainer","optionText","StyleSheet","create","flex","backgroundColor","paddingTop","marginRight","paddingHorizontal","paddingVertical","borderWidth","hairlineWidth","borderBottomWidth","borderColor","fontSize","alignSelf","marginTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\n\nexport default function LinksScreen() {\n  return (\n    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n      <OptionButton\n        icon=\"md-school\"\n        label=\"Read the Expo documentation\"\n        onPress={() => WebBrowser.openBrowserAsync('https://docs.expo.io')}\n      />\n\n      <OptionButton\n        icon=\"md-compass\"\n        label=\"Read the React Navigation documentation\"\n        onPress={() => WebBrowser.openBrowserAsync('https://reactnavigation.org')}\n      />\n\n      <OptionButton\n        icon=\"ios-chatboxes\"\n        label=\"Ask a question on the forums\"\n        onPress={() => WebBrowser.openBrowserAsync('https://forums.expo.io')}\n        isLastOption\n      />\n    </ScrollView>\n  );\n}\n\nfunction OptionButton({ icon, label, onPress, isLastOption }) {\n  return (\n    <RectButton style={[styles.option, isLastOption && styles.lastOption]} onPress={onPress}>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={styles.optionIconContainer}>\n          <Ionicons name={icon} size={22} color=\"rgba(0,0,0,0.35)\" />\n        </View>\n        <View style={styles.optionTextContainer}>\n          <Text style={styles.optionText}>{label}</Text>\n        </View>\n      </View>\n    </RectButton>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa',\n  },\n  contentContainer: {\n    paddingTop: 15,\n  },\n  optionIconContainer: {\n    marginRight: 12,\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#ededed',\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}